- hosts: k8s_nodes
  become: true
  gather_facts: false
  tasks:
    - name: Switching the swap off
      shell: | 
        swapoff -a 
        sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
    - name: Installing packages for container Runtime(Containerd)
      apt: 
        name:
          - ca-certificates
          - curl 
          - gnupg 
          - lsb-release
          - vim 
          - git
        state: latest
    - name: Create a directory for keyrings to add repo for containerd
      file:
        dest: /etc/apt/keyrings
        owner: root
        group: root
        state: directory
    - name: Adding the gpg key into the keyrings && Adding the repo url to the updates
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    - name: Installing Containerd
      apt: 
        update_cache: true
        name: containerd.io
        state: latest
    - name: Configuring Containerd and Update the cgroup as systemd for containerd
      shell: |
        containerd config default > /etc/containerd/config.toml
        sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
    - name: creating service for containerd
      service:
        name: containerd.service
        state: restarted
        enabled: true
    - name: Add  kernel settings & Enable IP tables(CNI Prerequisites)
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: | 
          overlay
          br_netfilter
    - name: execute the file
      shell: | 
        modprobe overlay
        modprobe br_netfilter
    - name: Adding content to file /etc/sysctl.d/k8s.conf
      copy:
        dest:  /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1
    - name: executing above commands for effect
      command: sysctl --system
    - name: Installing packages for installing kubeadm, kubelet and kubectl 
      apt: 
        update_cache: true
        name: 
          - apt-transport-https
          - ca-certificates
          - curl
        state: latest
    - name: Adding the Google Cloud public signing key of k8s repo and Adding the k8s repo
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
    - name: Update apt package index, install kubelet, kubeadm and kubectl, and pin their version
      apt: 
        update_cache: true
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: latest
    - name: apt-mark hold will prevent the package from being automatically upgraded or removed.
      command: apt-mark hold kubelet kubeadm kubectl
    - name: Enable and start kubelet service
      service:
        name: kubelet.service
        state: restarted
        enabled: true
